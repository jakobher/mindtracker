# Define the SSH setup script as a reusable anchor
.before_script_ssh_setup: &before_script_ssh_setup
  # Ensure ssh-agent is installed and started
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )
  # Start the ssh-agent in the background
  - eval $(ssh-agent -s)
  # Add the SSH private key stored in the SSH_PRIVATE_KEY variable to the ssh-agent
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  # Create the .ssh directory and set the correct permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Add the server's SSH key to known_hosts
  - ssh-keyscan -H $PRODUCTION_HOST >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# Use a Docker image with Docker CLI support
image: docker:27-cli

# Define the stages of the pipeline
stages:
  - build
  - test
  - deploy

# Job to compile the code in the build stage
build-job:
  stage: build
  script:
    - echo "Preparing build environment..."
    - echo "Installing dependencies..."
    - sleep 2 # Simulate installation time
    - echo "Build complete."

# Job to run unit tests in the test stage
unit-test-job:
  stage: test
  script:
    - echo "Running unit tests for MindTracker..."
    - echo "Testing models and controllers..."
    - sleep 2 # Simulate test time
    - echo "All tests passed!"

# Job to lint the code in the test stage
lint-test-job:
  stage: test
  script:
    - echo "Linting JavaScript code..."
    - echo "Checking ESLint rules..."
    - sleep 1 # Simulate linting time
    - echo "No linting issues found."

# Job to deploy to the production environment
deploy_production_job:
  stage: deploy
  environment:
    name: production
    url: https://$PRODUCTION_HOST
  variables:
    REMOTE_HOST: $PRODUCTION_HOST
    DOCKER_HOST: ssh://ubuntu@$PRODUCTION_HOST
  before_script: 
    - *before_script_ssh_setup
    - apk add --no-cache rsync
  script:
    - echo "Deploying to production..."
    # Ta bort nginx.conf om det är en katalog, för att undvika problem
    - ssh ubuntu@$PRODUCTION_HOST "if [ -d /home/ubuntu/mindtracker/nginx.conf ]; then rm -rf /home/ubuntu/mindtracker/nginx.conf; fi"
    # Kopiera alla filer inklusive nginx.conf från ditt repo
    - rsync -avz --delete --exclude='.git/' ./ ubuntu@$PRODUCTION_HOST:/home/ubuntu/mindtracker/
    # Kör docker compose på servern direkt
    - ssh ubuntu@$PRODUCTION_HOST "cd /home/ubuntu/mindtracker && SESSION_SECRET=$SESSION_SECRET docker compose -f docker-compose.production.yml up --build -d"
  only:
    - main
  needs:
    - unit-test-job
    - lint-test-job